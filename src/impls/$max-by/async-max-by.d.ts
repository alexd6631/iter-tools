/**
 * @generated-from ./$max-by.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { AsyncWrappable } from '../../types/async-iterable';

declare function asyncMaxBy<T, K>(
  mapper: (item: T) => K | Promise<K>,
): (iterable: AsyncWrappable<T>) => Promise<T | undefined>;

declare function asyncMaxBy<T, K>(
  mapper: (item: T) => K | Promise<K>,
  iterable: AsyncWrappable<T>,
): Promise<T | undefined>;

declare function asyncMaxBy<T, K>(
  mapper: (item: T) => K | Promise<K>,
  compare: (a: K, b: K) => number,
): (iterable: AsyncWrappable<T>) => Promise<T | undefined>;

declare function asyncMaxBy<T, K>(
  mapper: (item: T) => K | Promise<K>,
  compare: (a: K, b: K) => number,
  iterable: AsyncWrappable<T>,
): Promise<T | undefined>;

export { asyncMaxBy };
